[base]
path = {base}

[emq]
image = emqtt
port = 1883:1883,7083:8083,8883:8883,8084:8084,18083:18083

[influx]
image = influxdb
volumes = {container}conf/db/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
environment = INFLUXDB_ADMIN_ENABLED=true
port = 8083:8083,8086:8086
expose = 8090,8099
alias = influx -precision rfc3339->influx

[grafana]
port = 3001:3000

[pgsql]
image = postgresql
environment = POSTGRES_PASSWORD=123456
port = 5432:5432
alias = psql -U postgres->psql,createdb -h localhost -p 5432 -U postgres xinnongbaohe_zeus->create_xinnongbaohe_zeus,createdb -h localhost -p 5432 -U postgres xinnongbaohe->create_xinnongbaohe
hook.end = pgsql

[xinnongbaohe]
port = 8087:8087,8088:8088,8089:8089
command = demeter

[nongxiaohe]
port = 8087:8087,8088:8088,8089:8089
command = demeter

[apidoc]
volumes = {container}src/python:/root/input,{container}web/apidoc:/root/output,{container}src/python/nongxiaohe/doc:/root/config
call = apidoc
#使用dm call iot-apidoc input=demo^out=output来运行，然后可以在宿主机里使用apidoc命令
param = -i /root/input/{$input:nongxiaohe}/front/api -o /root/{$out:output} -c /root/config
alias = apidoc

[zeus]
port = 8087:8087,8088:8088,8089:8089
command = sh

[eros]
port = 8090:8090,8091:8091,8092:8092
command = iot

[ngrok]
port = 8081:8081,4443:4443
volumes = {container}src/python:/root/input,{container}web/apidoc:/root/output,{container}src/python/nongxiaohe/doc:/root/config
#使用dm call iot-ngrok farm=f1来运行
call = ngrok
#-config="ngrok.cfg" 
param = -subdomain="{$farm:f1}" -hostname="ngrok.dever.cc" {$port:8091}
command = ngrokd -domain="ngrok.dever.cc" -httpAddr=":8081" -tunnelAddr=":4443"